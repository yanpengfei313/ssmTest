[创建Spring框架项目]
    1. 引入Spring框架的依赖
    2. 准备号接口和实现类(业务层实现)
    3. 创建配置文件(applicationContext.xml),配置bean标签
    3. 创建String核心对象,获得bean的调用

[使用Spring进行IOC]
    1. 由Spring的核心容器去加载Spring配置文件,从而创建出使用者想要的对象,存储到核心容器
    2. 在调用核心容器的方法,传入对象的id,从而获取对象

[String的IOC的使用步骤]
    1. 引入依赖
    2. 编写配置文件,给要创建的类,写一个bean标签
    3. 在要使用对象的地方,创建核心容器指定要加载的配置文件,在调用核心容器的getBean()方法获取对象

[Spring核心容器里面的对象是什么时候创建的，又是什么时候销毁的]
    对象的创建
        1. 如果是单例：
            1.1 懒加载：在调用核心容器的getBean()方法的时候创建
            1.2 不懒加载：在核心容器创建的时候就一并把对象都创建了出来[默认]
        2. 如果是多例：
            都是懒加载,都是在调用核心容器getBean()的时候才创建
[配置文件中的bean标签的属性]
    id,name,其实都一样,具备唯一标识,但是一般开发中习惯使用id
    class,用来配置要实现类的全限定名
    scope::用来配置bean的作用范围
        singleton单例,默认值,Spring创建核心容器的时候会以单例方式来创建
        prototype多例,Spring创建核心容器的时候会以多例方式来创建
        request, 不用管,将对象存储到request作用域
        session, 不用管,将对象存储到session作用域
    init-method:Spring为备案初始化提供的回调方法
    destroy-method:Spring为bean销毁的时候提供的回调方法

[Bean的作用范围和生命周期]
    单例对象: scope= "singleton",表示一个应用只有一个实例对象,它的作用范围就是整个应用
        对象创建:当引用加载的时候,容器
